Saturday 03 March  2018
Cascading Style Sheet (CSS)
	*Language used to specify the presentation(e.g. layout,formatting fonts, colors, etc) of structurally marked up documents (e.g. HTML, XML, SYG, MathML, etc.)

	*Developed by Hakom Wium Lee (CHSS) and Bert Bos (BSP)
	@CHSS - Cascaded HTML Style Sheet
	@BSP - Stream based stylesheet proposal 

Version history 
	*CSS level 1 (CSS 1, W3C Recommendation, Dec 1996)
	*CSS level 2 (CSS 2, W3C Recommendation, May 1998)
	*CSS level 2 Revision 1 (CSS 2.1, W3C Recommendation Jun 2011)
	*CSS level 3 

	*Modular approach to CSS developoment (as opposed to the monolithic specification of CSS 2.1)   

HTML STYLESHEETS
	*Source of styles for HTML documents
		**author styles 
			*external (a.k.a. linked) stylesheet(recommended)
			*embeded (a.k.a. internal) stylesheet
			*inline styles
		**user styles 
			*Some browsers provide (non-standard) alternatives through plugins/extensions (e.g. stylish)
		**user agent styles 
			*sample default user agent stylesheet from css 2.1 
			*the source of style denotes its origin which is used in determining into precedence in the cascade

CSS STATEMENTS
	*At rules
	 @charset
	@import 
	@namespace
	@media
	@font space
	@key frames
CSS RULE SET 
	*consist of selector; followed by a brace-enclosed declaration block

CSS Selector
Selector Syntax:
	chain of one or more sequences of simpple selectors-separated by combinators with one pseudo-element possibly appended.
Selector Group: 
	Comma-separated list of selectors representing the union of all elements 

	Combinators:
		descendant combinator (whitespace)
		i.e space, tab, line feed, carriage rerturn, form, feed.
		Child Combinator(>)
		sibling Combinator
			Adjacent sibling Combinator(+)
			general sibling Combinator (-)

Simple selector:
	Universal Selector(*) 
	type Selector (p{background-color: #fff})
					(h1{color: rgba(255,0,0,0,5);})
	id Selector (#) e.g. #info
	class Selector
	attribute Selector - Type selector with brackets 
	pseudo classes(:)
		*dynamic pseudo-classes
			*link pseudo clsas (:link, :visited)
			*user action pseudo class  (:hover)
		*target pseudo class
			*:target
		*Language pseudo class 
			:lang()
		*UI element state pseudo class 
			:enable, :disable,:checked 
		*Structural pseudo class 
			:root
			:first-child
			:last-child
			:only-child
		*negation pseudo class
			:not()
			
